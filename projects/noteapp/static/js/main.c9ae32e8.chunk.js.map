{"version":3,"sources":["components/AddNote.js","components/ViewNotes.js","components/SearchNotes.js","components/App.js","serviceWorker.js","index.js"],"names":["AddNote","state","color","title","date","time","note","changeData","bind","addData","e","target","value","name","this","setState","preventDefault","tempNote","props","addNote","className","onSubmit","htmlFor","type","onChange","placeholder","maxLength","Component","ViewNotes","notes","map","item","key","noteId","parse","format","onClick","deleteNote","SearchNotes","id","searchNotes","App","myNotes","searchText","lastIndex","tempNotes","unshift","without","userInput","fetch","then","response","json","result","nts","filteredNotes","filter","eachItem","toLowerCase","includes","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9ae32e8.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AddNote extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            color: 'card-orange',\r\n            title: '',\r\n            date: '',\r\n            time: '',\r\n            note: ''\r\n        }\r\n        this.changeData = this.changeData.bind(this);\r\n        this.addData = this.addData.bind(this);\r\n    }\r\n\r\n    changeData(e) {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    addData(e) {\r\n        e.preventDefault();\r\n        let tempNote = {\r\n            color: this.state.color,\r\n            title: this.state.title,\r\n            date: this.state.date + ' ' + this.state.time,\r\n            note: this.state.note\r\n        };\r\n\r\n        this.props.addNote(tempNote);\r\n\r\n        this.setState({\r\n            color: this.state.color,\r\n            title: '',\r\n            date: '',\r\n            time: '',\r\n            note: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.color}>\r\n                <form onSubmit={this.addData}>\r\n                    <label htmlFor=\"color\">\r\n                    </label>\r\n                    <div className=\"color-div\">\r\n                        <label className=\"container-clr-opt-orange\">\r\n                           <input\r\n                            type=\"radio\"\r\n                            name=\"color\"\r\n                            value=\"card-orange\"\r\n                            onChange={this.changeData}\r\n                            />\r\n                            <span className=\"clr-block-orange\"></span>\r\n                        </label>\r\n\r\n                        <label className=\"container-clr-opt-blue\">\r\n                           <input\r\n                            type=\"radio\"\r\n                            name=\"color\"\r\n                            value=\"card-blue\"\r\n                            onChange={this.changeData}\r\n                            />\r\n                            <span className=\"clr-block-blue\"></span>\r\n                        </label>\r\n\r\n                        <label className=\"container-clr-opt-yellow\">\r\n                           <input\r\n                            type=\"radio\"\r\n                            name=\"color\"\r\n                            value=\"card-yellow\"\r\n                            onChange={this.changeData}\r\n                            />\r\n                            <span className=\"clr-block-yellow\"></span>\r\n                        </label>\r\n\r\n                        <label className=\"container-clr-opt-green\">\r\n                           <input\r\n                            type=\"radio\"\r\n                            name=\"color\"\r\n                            value=\"card-green\"\r\n                            onChange={this.changeData}\r\n                            />\r\n                            <span className=\"clr-block-green\"></span>\r\n                        </label>\r\n                    </div>\r\n                    <label htmlFor=\"title\">\r\n                    </label>\r\n                    <div className=\"title-div\">\r\n                        <input\r\n                        type=\"text\"\r\n                        value={this.state.title}\r\n                        name=\"title\"\r\n                        onChange={this.changeData}\r\n                        className=\"title-field\"\r\n                        placeholder=\"TITLE\"\r\n                    />\r\n                    </div>\r\n                    \r\n                    <div className=\"datetime-div\">\r\n                        <label htmlFor=\"date\">\r\n                        </label>\r\n                        <input\r\n                            type=\"date\"\r\n                            value={this.state.date}\r\n                            name=\"date\"\r\n                            onChange={this.changeData}\r\n                            className=\"date-field\"\r\n                        />\r\n                        <label htmlFor=\"time\">\r\n                        </label>\r\n                        <input\r\n                            type=\"time\"\r\n                            value={this.state.time}\r\n                            name=\"time\"\r\n                            onChange={this.changeData}\r\n                            className=\"time-field\"\r\n                        />\r\n                    </div>\r\n                    \r\n                    <label htmlFor=\"note\">\r\n                    </label>\r\n                    <textarea\r\n                        maxLength=\"250\"\r\n                        value={this.state.note}\r\n                        onChange={this.changeData}\r\n                        name=\"note\"\r\n                        className=\"note-field\"\r\n                        placeholder=\"NOTE\"\r\n                    >\r\n                    </textarea>\r\n                    <button className=\"btn-add-note\">\r\n                        ADD\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddNote;","import React, {Component} from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nclass ViewNotes extends Component {\r\n    render() {\r\n        return (       \r\n            <>\r\n            {this.props.notes.map(item => (\r\n                \r\n                \r\n                <div key={item.noteId}\r\n                    className={item.color}\r\n                >\r\n                    <div className=\"title-div\">\r\n                            <h2 className=\"added-title-field\">{item.title}</h2>\r\n                    </div>\r\n                    \r\n                    <div className=\"added-datetime-div\">\r\n                        <h3 className=\"added-datetime-h3\">\r\n                            <Moment\r\n                                date={item.date}\r\n                                parse=\"YYYY-MM-DD hh:mm\"\r\n                                format=\"MMM D, YYYY\"\r\n                            />\r\n                        </h3 >\r\n                        <h3 className=\"added-datetime-h3\">\r\n                            <Moment\r\n                                date={item.date}\r\n                                parse=\"YYYY-MM-dd hh:mm\"\r\n                                format=\"h:mma\"\r\n                            />\r\n                        </h3>\r\n                    </div>\r\n                    \r\n                    <p className=\"added-note-p\">{item.note}</p>\r\n                    <button\r\n                        className=\"btn-del-note\"\r\n                        onClick={() => this.props.deleteNote(item)}\r\n                    >\r\n                        X\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewNotes;","import React, { Component } from 'react';\r\n\r\nclass SearchNotes extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search-div\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search-input\"\r\n                    placeholder=\"SEARCH\"\r\n                    onChange={e=>this.props.searchNotes(e.target.value)}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchNotes;","import React, {Component} from 'react';\nimport '../css/App.css';\nimport AddNote from './AddNote';\nimport ViewNotes from './ViewNotes';\nimport SearchNotes from './SearchNotes';\nimport {without} from 'lodash';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      myNotes: [],\n      searchText: '',\n      lastIndex: 0\n    };\n    //\n    this.deleteNote = this.deleteNote.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.searchNotes = this.searchNotes.bind(this);\n  }\n\n  addNote(note) {\n    let tempNotes = this.state.myNotes;\n    note.noteId = this.state.lastIndex;\n    tempNotes.unshift(note);\n    this.setState({\n      myNotes: tempNotes,\n      lastIndex: this.state.lastIndex + 1\n    });\n  }\n\n  // function that deletes a note\n  deleteNote(note) {\n    // stored all the notes in the array in a temp variable\n    let tempNotes = this.state.myNotes;\n    // without removed the clicked note from the array and stores it in the tempNotes variable\n    tempNotes = without(tempNotes, note);\n\n    // new state of the myNotes variable is set to tempNotes\n    this.setState({\n      myNotes: tempNotes\n    })\n  }\n\n  searchNotes(userInput) {\n    this.setState({searchText: userInput});\n  }\n\n  componentDidMount() {\n    fetch('./data.json')\n      .then(response => response.json())\n      .then(result => {\n        const nts = result.map(item => {\n          item.noteId = this.state.lastIndex;\n          this.setState({ lastIndex: this.state.lastIndex + 1 });\n          return item;\n        });\n        this.setState({\n          myNotes: nts\n        });\n      });\n  }\n\n  render() {\n\n    let filteredNotes = this.state.myNotes;\n\n    filteredNotes = filteredNotes.filter(eachItem => {\n      return(\n        eachItem['title'].toLowerCase()\n          .includes(this.state.searchText.toLowerCase()) ||\n        eachItem['note'].toLowerCase()\n          .includes(this.state.searchText.toLowerCase())\n      );\n    });\n\n    return (\n      <>\n      <div id=\"container\">\n        <header>\n          <h1 className=\"app-name\">Notes App</h1>\n          <SearchNotes\n            searchNotes = {this.searchNotes}\n          />\n        </header>\n          \n        <main>  \n          <div className=\"notes-container\">\n            <AddNote\n              addNote = {this.addNote}\n            />\n            <ViewNotes\n              notes = {filteredNotes}\n              deleteNote = {this.deleteNote}\n            />\n          </div> \n          <footer>\n            <p>&copy; <a href=\"https://gillharpreet.com\">Harpreet Singh Gill</a> 2020</p>\n          </footer>\n        </main>\n      </div>\n      </>\n    );\n  }  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}